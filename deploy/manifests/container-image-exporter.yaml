apiVersion: v1
kind: Namespace
metadata:
  name: container-image-exporter
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: container-image-exporter
  namespace: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
---
apiVersion: v1
kind: Secret
metadata:
  name: container-image-exporter-docker-config
  namespace: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K  # Empty JSON object "{}" in base64
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets", "serviceaccounts"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: container-image-exporter
subjects:
- kind: ServiceAccount
  name: container-image-exporter
  namespace: container-image-exporter
---
apiVersion: v1
kind: Service
metadata:
  name: container-image-exporter
  namespace: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app.kubernetes.io/name: container-image-exporter
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: health
    port: 8081
    targetPort: 8081
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-image-exporter
  namespace: container-image-exporter
  labels:
    app.kubernetes.io/name: container-image-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: container-image-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: container-image-exporter
    spec:
      serviceAccountName: container-image-exporter
      containers:
      - name: controller
        image: ghcr.io/ribbybibby/container-image-exporter
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: health
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: docker-config
          mountPath: /home/nonroot/.docker/config.json
          subPath: .dockerconfigjson
          readOnly: true
      volumes:
      - name: docker-config
        secret:
          secretName: container-image-exporter-docker-config
